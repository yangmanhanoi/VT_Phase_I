spring.application.name=ticketserver

server.port=9999

#mysql
spring.datasource.url=jdbc:mysql://localhost:3306/ticket
spring.datasource.username=springstudent
spring.datasource.password=springstudent

#kafka consumer properties
spring.kafka.consumer.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=chatGroup
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
#spring.kafka.consumer.properties.spring.json.trusted.packages=*
#spring.kafka.consumer.properties.spring.json.value.default.type=com.namduong.viettel.dtos.TicketPayload

# kafka producer properties
spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-deserializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.add.type.headers=true

#logging.level.org.hibernate.SQL=trace
#logging.level.org.hibernate.orm.jdbc.bind=trace
